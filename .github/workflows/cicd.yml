name: "ci-cd"
on: [push, pull_request]

jobs:
  setup-build:
    runs-on: ${{ matrix.os }}
    name: setup-build
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            cuda: "11.7"
            gcc: 10
    env:
      build_dir: "build"
      config: "Release"
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3
      - name: action-cuda-compiler
        uses: slabstech/action-cuda-compiler@v0.0.1
        with:
          cuda: ${{ matrix.cuda }}
          gcc: ${{ matrix.gcc }}
          github-actor: ${{ github.actor }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-repository: ${{ github.repository }}
          project-name: amma
          action_build_dir: {{ env.build_dir }}
          action_config: {{ env.config }}
          cmake_path: engine/
  push-deploy:
    name: push-deploy
    runs-on : ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: deploy-container-to-registry-client
        uses: slabstech/action-deploy-container-to-registry@v0.0.1
        with:
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}
          github-actor: ${{ github.actor }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-repository: ${{ github.repository }}
          project-name: amma
          service-name: engine
          dockerfile-path: ./Dockerfile